---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hmi-pactbroker.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "hmi-pactbroker.name" . }}
    app: {{ include "hmi-pactbroker.name" . }}
    helm.sh/chart: {{ include "hmi-pactbroker.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.aadIdentityName }}
    aadpodidbinding: {{ .Values.aadIdentityName }}
    {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hmi-pactbroker.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hmi-pactbroker.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.aadIdentityName }}
        aadpodidbinding: {{ .Values.aadIdentityName }}
        {{- end }}
    spec:
      {{- $aadIdentityName := .Values.aadIdentityName }}
      volumes:
      {{- range $.Values.keyvaults}}
      - name: {{ .name }}
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ $aadIdentityName }}-podid
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/bin/sh"
            - "-c"
            - |
              sleep 30
              export PACT_BROKER_DATABASE_USERNAME=$(cat /kvmnt/pact-db-user)@{{- required "postgresql.postgresqlHost " .Values.postgresql.postgresqlHost -}}
              export PACT_BROKER_DATABASE_PASSWORD=$(cat /kvmnt/pact-db-password)
              /sbin/my_init
          volumeMounts:
          {{- range $.Values.keyvaults}}
          - name: {{ .name }}
            mountPath: "/kvmnt"
            readOnly: true
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PACT_BROKER_DATABASE_HOST
              value: {{ required "postgresqlHost " .Values.postgresql.postgresqlHost }}
            - name: PACT_BROKER_DATABASE_NAME
              value: {{ required "postgresqlDatabase " .Values.postgresql.postgresqlDatabase }}
            - name: PACT_BROKER_DATABASE_PORT
              value: {{ .Values.postgresql.postgresqlPort | default "5432" | quote }}
            - name: PACT_BROKER_DISABLE_SSL_VERIFICATION
              value: {{ .Values.postgresql.postgresqlDisableSsl | default "true" | quote }}
            - name: PACT_BROKER_PUBLIC_HEARTBEAT
              value: 'true'
            - name: PACT_BROKER_LOG_LEVEL
              value: INFO
          {{- if eq .Values.livenessProbe.enabled true }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          {{ end }}
          {{- if eq .Values.readinessProbe.enabled true }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}